export const gitTipData = [
  {
    id: 0,
    msg: `커밋 기록을 볼 수 있는 git log 명령어에, '--graph' 옵션을 추가하여 커밋 히스토리를 그래프 형태로 볼 수 있습니다.`,
  },
  {
    id: 1,
    msg: `현재 작업 중인 변경 사항을 볼 수 있는 git diff 명령어에, --cached 옵션을 추가하여 Staging Area에 있는 변경 사항을 볼 수 있습니다.`,
  },
  {
    id: 2,
    msg: `'git clone --depth 1' 명령어를 사용하여 저장소를 복제할 때 최신 커밋만 가져올 수 있습니다. 또한 더 빠르게 복제할 수 있습니다.`,
  },
  {
    id: 3,
    msg: `git rebase 명령어를 사용하여 브랜치를 재배치할 수 있습니다. 이를 통해 커밋 히스토리를 깨끗하게 유지하면서 브랜치를 합칠 수 있습니다.`,
  },
  {
    id: 4,
    msg: `'git tag' 명령어를 사용하여 태그를 추가하고 태그 목록을 볼 수 있습니다. 이를 통해 특정 시점에서 코드를 마크하고 릴리즈를 준비할 수 있습니다.`,
  },
  {
    id: 5,
    msg: `git branch -a 명령어를 사용하여 모든 로컬 및 리모트 브랜치 목록을 볼 수 있습니다. `,
  },
  {
    id: 6,
    msg: `'git branch -d'명령어를 사용하여 로컬 브랜치를 삭제할 수 있습니다.`,
  },
  {
    id: 7,
    msg: `'git blame <file>' 명령어를 사용하여 파일의 각 줄을 마지막으로 수정한 커밋과 작성자를 확인할 수 있습니다.`,
  },
  {
    id: 8,
    msg: `'git merge --no-ff' 명령어를 사용하여 브랜치를 병합할 때 항상 새로운 커밋을 만들어 커밋 히스토리를 보존하면서 브랜치를 합칠 수 있습니다.`,
  },
  {
    id: 9,
    msg: `'git cherry-pick -e <commit>' 명령어를 사용하여 선택한 커밋을 현재 브랜치에 적용하면서 커밋 메시지를 수정할 수 있습니다. `,
  },
];
